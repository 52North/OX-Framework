/**
 * ﻿Copyright (C) 2012
 * by 52 North Initiative for Geospatial Open Source Software GmbH
 *
 * Contact: Andreas Wytzisk
 * 52 North Initiative for Geospatial Open Source Software GmbH
 * Martin-Luther-King-Weg 24
 * 48155 Muenster, Germany
 * info@52north.org
 *
 * This program is free software; you can redistribute and/or modify it under
 * the terms of the GNU General Public License version 2 as published by the
 * Free Software Foundation.
 *
 * This program is distributed WITHOUT ANY WARRANTY; even without the implied
 * WARRANTY OF MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program (see gnu-gpl v2.txt). If not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA or
 * visit the Free Software Foundation web page, http://www.fsf.org.
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0-b11-EA 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.06.25 at 02:38:11 CEST 
//


package org.n52.oxf.wcs.capabilities;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

@XmlAccessorType(value = XmlAccessType.FIELD)
@XmlType(name = "CoverageOfferingType", namespace = "http://www.opengis.net/wcs")
public class CoverageOfferingType
    extends CoverageOfferingBriefType
{

    @XmlElement(name = "domainSet", namespace = "http://www.opengis.net/wcs", type = DomainSetType.class)
    protected DomainSetType domainSet;
    @XmlElement(name = "rangeSet", namespace = "http://www.opengis.net/wcs", type = RangeSet.class)
    protected RangeSet rangeSet;
    @XmlElement(name = "supportedCRSs", namespace = "http://www.opengis.net/wcs", type = SupportedCRSsType.class)
    protected SupportedCRSsType supportedCRSs;
    @XmlElement(name = "supportedFormats", namespace = "http://www.opengis.net/wcs", type = SupportedFormatsType.class)
    protected SupportedFormatsType supportedFormats;
    @XmlElement(name = "supportedInterpolations", namespace = "http://www.opengis.net/wcs", type = SupportedInterpolationsType.class)
    protected SupportedInterpolationsType supportedInterpolations;

    /**
     * Gets the value of the domainSet property.
     * 
     * @return
     *     possible object is
     *     {@link org.n52.oxf.wcs.capabilities.DomainSetType}
     */
    public DomainSetType getDomainSet() {
        return domainSet;
    }

    /**
     * Sets the value of the domainSet property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.n52.oxf.wcs.capabilities.DomainSetType}
     */
    public void setDomainSet(DomainSetType value) {
        this.domainSet = value;
    }

    /**
     * Gets the value of the rangeSet property.
     * 
     * @return
     *     possible object is
     *     {@link org.n52.oxf.wcs.capabilities.RangeSet}
     */
    public RangeSet getRangeSet() {
        return rangeSet;
    }

    /**
     * Sets the value of the rangeSet property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.n52.oxf.wcs.capabilities.RangeSet}
     */
    public void setRangeSet(RangeSet value) {
        this.rangeSet = value;
    }

    /**
     * Gets the value of the supportedCRSs property.
     * 
     * @return
     *     possible object is
     *     {@link org.n52.oxf.wcs.capabilities.SupportedCRSsType}
     */
    public SupportedCRSsType getSupportedCRSs() {
        return supportedCRSs;
    }

    /**
     * Sets the value of the supportedCRSs property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.n52.oxf.wcs.capabilities.SupportedCRSsType}
     */
    public void setSupportedCRSs(SupportedCRSsType value) {
        this.supportedCRSs = value;
    }

    /**
     * Gets the value of the supportedFormats property.
     * 
     * @return
     *     possible object is
     *     {@link org.n52.oxf.wcs.capabilities.SupportedFormatsType}
     */
    public SupportedFormatsType getSupportedFormats() {
        return supportedFormats;
    }

    /**
     * Sets the value of the supportedFormats property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.n52.oxf.wcs.capabilities.SupportedFormatsType}
     */
    public void setSupportedFormats(SupportedFormatsType value) {
        this.supportedFormats = value;
    }

    /**
     * Specifies whether and how the server can interpolate coverage values over the spatial domain, when a GetCoverage request requires resampling, reprojection, or other generalization. If supportedInterpolations is absent or empty with no default, then clients should assume nearest-neighbor interpolation. If the only interpolation method listed is �none�, clients can only retrieve coverages from this layer in its native CRS and at its native resolution.
     * 
     * @return
     *     possible object is
     *     {@link org.n52.oxf.wcs.capabilities.SupportedInterpolationsType}
     */
    public SupportedInterpolationsType getSupportedInterpolations() {
        return supportedInterpolations;
    }

    /**
     * Specifies whether and how the server can interpolate coverage values over the spatial domain, when a GetCoverage request requires resampling, reprojection, or other generalization. If supportedInterpolations is absent or empty with no default, then clients should assume nearest-neighbor interpolation. If the only interpolation method listed is �none�, clients can only retrieve coverages from this layer in its native CRS and at its native resolution.
     * 
     * @param value
     *     allowed object is
     *     {@link org.n52.oxf.wcs.capabilities.SupportedInterpolationsType}
     */
    public void setSupportedInterpolations(SupportedInterpolationsType value) {
        this.supportedInterpolations = value;
    }

}
